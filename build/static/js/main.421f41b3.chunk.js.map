{"version":3,"sources":["actions/index.js","container/AddTodo.js","components/Todo.js","components/TodoList.js","container/VisibleTodoList.js","components/Footer.js","components/App.js","reducers/todos.js","reducers/visibilityFilters.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","connect","_ref","input","dispatch","react_default","a","createElement","onSubmit","e","text","preventDefault","value","trim","type","id","ref","Todo","completed","onClick","style","textDecoration","TodoList","todos","toggleTodo","Fragment","length","map","todo","components_Todo","Object","assign","key","VisibleTodoList","filter","Error","state","visibilityFilters","filters","console","log","App","container_AddTodo","container_VisibleTodoList","components_Footer","initialState","arguments","undefined","action","concat","toConsumableArray","objectSpread","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.421f41b3.chunk.js","sourcesContent":["let nextTodoId = 1;\r\n\r\nexport const addTodo = text => ({\r\n  type: \"ADD_TODO\",\r\n  id: nextTodoId++,\r\n  text\r\n});\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: \"SET_VISIBILITY_FILTER\",\r\n  filter\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n  type: \"TOGGLE_TODO\",\r\n  id\r\n});\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: \"SHOW_ALL\",\r\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\r\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions\";\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  //   console.log(dispatch);\r\n  let input;\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(input.value);\r\n        if (!input.value.trim()) {\r\n          return;\r\n        }\r\n        dispatch(addTodo(input.value));\r\n        input.value = \"\";\r\n      }}\r\n    >\r\n      <input type=\"text\" ref={ref => (input = ref)} />\r\n      <button type=\"submit\">Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect()(AddTodo);\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, completed, onClick }) => {\r\n  return (\r\n    <li\r\n      onClick={onClick}\r\n      style={{ textDecoration: completed ? \"line-through\" : \"\" }}\r\n    >\r\n      {text}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => {\r\n  // console.log(todos);\r\n  return (\r\n    <React.Fragment>\r\n      {todos.length > 0 ? (\r\n        <ul>\r\n          {todos.map(todo => (\r\n            <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        \"No Todo Left\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","// import React from \"react\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport { toggleTodo } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { VisibilityFilters } from \"../actions\";\r\n\r\nconst VisibleTodoList = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(todo => todo.completed);\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(todo => !todo.completed);\r\n    default:\r\n      throw new Error(\"Unknown filter: \" + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: VisibleTodoList(state.todos, state.visibilityFilters)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { VisibilityFilters } from \"../actions\";\r\nimport { setVisibilityFilter } from \"../actions\";\r\n\r\nconst Footer = ({ filters, dispatch }) => {\r\n  //   console.log(filters);\r\n  return (\r\n    <div>\r\n      <span>Show: </span>\r\n      <button\r\n        onClick={() => console.log(dispatch(setVisibilityFilter(\"SHOW_ALL\")))}\r\n      >\r\n        All\r\n      </button>\r\n      <button>Active</button>\r\n      <button>Completed</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.visibilityFilters\r\n});\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import React from \"react\";\r\nimport AddTodo from \"../container/AddTodo\";\r\nimport VisibleTodoList from \"../container/VisibleTodoList\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n);\r\nexport default App;\r\n","const initialState = [\r\n  {\r\n    id: 0,\r\n    text: \"something\",\r\n    completed: false\r\n  }\r\n];\r\n\r\nconst todos = (state = initialState, action) => {\r\n  // console.log(state);\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return (\r\n        // console.log(action.text),\r\n        [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false\r\n          }\r\n        ]\r\n      );\r\n    case \"TOGGLE_TODO\":\r\n      return (\r\n        console.log(\"TOGGLE_TODO\"),\r\n        state.map(todo =>\r\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n        )\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { VisibilityFilters } from \"../actions\";\r\n\r\nconst visibilityFilters = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case \"SET_VISIBILITY_FILTER\":\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default visibilityFilters;\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport visibilityFilters from \"./visibilityFilters\";\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilters\r\n});\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}